kind: Deployment
apiVersion: apps/v1
metadata:
  name: ct-ui
  namespace: command-center
  uid: b7c2a219-9160-4b8c-9ca0-59695c40beba
  resourceVersion: '3644096'
  generation: 1
  creationTimestamp: '2024-09-26T08:11:22Z'
  labels:
    app: command-center
    component: ct-ui
    tier: UI
    workflow: actions.github.com-k8s-deploy
    workflowFriendlyName: Deploy_to_Kubernetes
  annotations:
    deployment.kubernetes.io/revision: '1'
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: apps/v1
      time: '2024-09-26T08:11:22Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:tier: {}
            f:workflow: {}
            f:workflowFriendlyName: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:component: {}
                f:tier: {}
            f:spec:
              f:containers:
                k:{"name":"ct-ui"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":80,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:imagePullSecrets:
                .: {}
                k:{"name":"dfdpcred"}: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2024-09-26T08:11:22Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"ReplicaFailure"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:unavailableReplicas: {}
      subresource: status
spec:
  replicas: 1
  selector:
    matchLabels:
      app: command-center
      component: ct-ui
      tier: UI
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: command-center
        component: ct-ui
        tier: UI
    spec:
      containers:
        - name: ct-ui
          image: dfdpacr.azurecr.io/ct-ui:ck1
          ports:
            - containerPort: 80
              protocol: TCP
          resources:
            limits:
              cpu: 400m
              memory: 400Mi
            requests:
              cpu: 200m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      imagePullSecrets:
        - name: dfdpcred
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 1
  unavailableReplicas: 1
  conditions:
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2024-09-26T08:11:22Z'
      lastTransitionTime: '2024-09-26T08:11:22Z'
      reason: NewReplicaSetCreated
      message: Created new replica set "ct-ui-6879fb6f49"
    - type: Available
      status: 'False'
      lastUpdateTime: '2024-09-26T08:11:22Z'
      lastTransitionTime: '2024-09-26T08:11:22Z'
      reason: MinimumReplicasUnavailable
      message: Deployment does not have minimum availability.
    - type: ReplicaFailure
      status: 'True'
      lastUpdateTime: '2024-09-26T08:11:22Z'
      lastTransitionTime: '2024-09-26T08:11:22Z'
      reason: FailedCreate
      message: >-
        admission webhook "validation.gatekeeper.sh" denied the request:
        [azurepolicy-k8sazurev2blockautomounttoken-cb3d0dc1264514802946]
        Automounting service account token is disallowed, pod:
        ct-ui-6879fb6f49-6lzr8

        [azurepolicy-k8sazurev3readonlyrootfilesyst-3fa09ce058ca6f6ad440]
        Readonly root filesystem is required for container.
        pod:'ct-ui-6879fb6f49-6lzr8', container:'ct-ui'
